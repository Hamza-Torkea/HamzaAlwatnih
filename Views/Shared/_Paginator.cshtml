@model alwatnia.Helper.Functions.PaginatedResult<alwatnia.Models.IHasPaginator>
@{
  var min = Math.Max(1, Model.CurrentPage - 5);
  var max = Math.Min(Model.PageCounts, Model.CurrentPage + 5);
  if (Model.QueryParams == null)
  {
    Model.QueryParams = new RouteValueDictionary();
  }
}
<nav aria-label="Page navigation example">
  <ul class="pagination">
    @if (Model.CurrentPage > 1)
    {
      var dict = new RouteValueDictionary(Model.QueryParams);
      dict.Add("page", Model.CurrentPage - 1);
      <li class="page-item">
        <a class="page-link" href="@Url.Action(Model.Entity, dict)" aria-label="Previous">
          <span aria-hidden="true">&laquo;</span>
          <span class="sr-only">Previous</span>
        </a>
      </li>
    }

    @for (int i = min; i <= max; i++)
    {
      var _class = i == Model.CurrentPage ? "active" : "";
      var dict = new RouteValueDictionary(Model.QueryParams);
      dict.Add("page", i);
      <li class="page-item @_class"><a class="page-link" href="@Url.Action(Model.Entity, dict)">@i</a></li>
    }

    @if (Model.CurrentPage < Model.PageCounts)
    {
      var dict = new RouteValueDictionary(Model.QueryParams);
      dict.Add("page", Model.CurrentPage + 1);
      <li class="page-item">
        <a class="page-link" href="@Url.Action(Model.Entity, dict)" aria-label="Next">
          <span aria-hidden="true">&raquo;</span>
          <span class="sr-only">Next</span>
        </a>
      </li>
    }
  </ul>
</nav>